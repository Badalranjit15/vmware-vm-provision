# Copyright Â© 2021 Dell Inc. or its subsidiaries. All Rights Reserved.
# This software is protected, without limitation, by copyright law and
# international treaties. Use of this software and the intellectual property
# contained therein is expressly limited to the terms and conditions of the
# License Agreement under which it is provided by or on behalf of Dell Inc
# or its subsidiaries.
# .........................................................................
- name: Connecting to SRS, hashicorpvault and adding ip to dynamic inventory
  hosts: localhost
  collections:
    - ngcs.common_collection
  no_log: true
  vars:
    ara_url: "{{ snow_ara_url }}"
    pf_url: "{{ snow_pf_url }}"
    srs_product_name: "{{ srs_product_name }}"
    awx_node_srs_name: "{{ awx_node_srs_name }}" 
    customer_hcv_role_id: "{{ customer_hcv_role_id }}"
    customer_hcv_secret_id: "{{ customer_hcv_secret_id }}"
    customer_account: "{{ customer_account }}"
    dell_location_id : "{{ dell_location_id }}"
    automation_hcv_role_id: "{{ automation_hcv_role_id }}"
    automation_hcv_secret_id : "{{ automation_hcv_secret_id }}"
    snow_hcv_url: "{{snow_hcv_url}}"
    vault_data: "{{ vault_data }}"
    session_id: "{{ session_id }}"
  tasks:
    - name: Roles for srs,hashicorpvault connection and adding srs ip to dynamichost
      include_role: 
        name: ngcs-srs-hashicorp-connect
- name: Installing backup agent and configuring the VM backup
  hosts: cpms_ara_loopback
  gather_facts: false
  collections:
    - ngcs.common_collection
  vars:
      baas_username: "{{ vault_data.data.baas_username }}"
      baas_password: "{{ vault_data.data.baas_password }}"
      windows_username: "{{ vault_data.data.windows_username }}"
      windows_password: "{{ vault_data.data.windows_password }}"
      linux_username: "{{ vault_data.data.linux_username }}"
      linux_password: "{{ vault_data.data.linux_password }}"
      powershell_path: "{{ vault_data.data_powershell_path }}"
      avamar_agent_windows_install_command: "{{ vault_data.data.avamar_agent_windows_install_command }}"
      networker_client_windows_install_command: "{{ vault_data.data.networker_client_windows_install_command }}"
      networker_ext_client_windows_install_command: "{{ vault_data.dat.networker_ext_client_windows_install_command }}"
      vm_yum_shell: "{{ vault_data.data.vm_yum_shell }}"
      avamar_linux_install_command: "{{ vault_data.data.avamar_linux_install_command }}"
      networker_client_linux_install_command: "{{ vault_data.data.networker_client_linux_install_command }}"
      networker_ext_client_linux_install_command: "{{ vault_data.data.networker_ext_client_linux_install_command }}"
      vm_setenforce_shell: "{{ tower_vm_setenforce_shell }}"
      vm_dpkg_shell: "{{ tower_vm_dpkg_shell }}"
      avamar_ubuntu_install_command: "{{ tower_avamar_ubuntu_install_command }}"
      networker_client_ubuntu_install_command: "{{ tower_networker_client_ubuntu_install_command }}"
      networker_ext_client_ubuntu_install_command: "{{ tower_networker_ext_client_ubuntu_install_command }}"
      baas_url: "{{ snow_baas_url }}"
      vm_name: "{{ snow_vm_name.replace('_','-').split(',') }}"
      backup_type: "{{ snow_backup_type }}"
      policy_id: "{{ snow_policy_id }}"
      ptag_name: "{{ snow_ptag_name }}"
      verify_certs: "{{ snow_verify_certs }}"
      vcenter_fqdn: "{{ snow_vcenter_fqdn }}"
      vcenter_username: "{{ vault_data.data.vcenter_username }}"
      vcenter_password:  "{{ vault_data.data.vcenter_password }}"
      vcenter_datacenter: "{{ snow_vcenter_datacenter }}"
      vcenter_datacenter_folder: "vm/Discovered virtual machine"
      backup_agent: "{{ snow_backup_agent }}"
      os_name: "{{ snow_os_name }}"
      ara_url: "{{ snow_ara_url }}"
      pf_url: "{{ snow_pf_url }}"
  tasks:
    - name: calling vm backup role
      block:
        - name: provisioning and postprovisioning
          include_role:
            name: vm_backup
        - name: SRS disconnect success 
          import_role:
            name: srs-disconnect-success
          delegate_to: localhost
          delegate_facts: True
          no_log: true
      rescue:
        - name: SRS disconnect failure
          import_role:
            name: srs-disconnect-fail
          delegate_to: localhost
          delegate_facts: True
