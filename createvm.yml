# Copyright Â© 2021 Dell Inc. or its subsidiaries. All Rights Reserved.
# This software is protected, without limitation, by copyright law and
# international treaties. Use of this software and the intellectual property
# contained therein is expressly limited to the terms and conditions of the
# License Agreement under which it is provided by or on behalf of Dell Inc
# or its subsidiaries.
# .........................................................................
- name: Connecting to SRS, hashicorpvault and adding ip to dynamic inventory
  hosts: localhost
  collections:
    - ngcs.common_collection
  no_log: "{{ tower_no_log_value }}"
  vars:
    ara_url: "{{ snow_ara_url }}"
    pf_url: "{{ snow_pf_url }}"
    srs_product_name: "{{ srs_product_name }}"
    awx_node_srs_name: "{{ awx_node_srs_name }}" 
    customer_hcv_role_id: "{{ customer_hcv_role_id }}"
    customer_hcv_secret_id: "{{ customer_hcv_secret_id }}"
    customer_account: "{{ customer_account }}"
    dell_location_id : "{{ dell_location_id }}"
    automation_hcv_role_id: "{{ automation_hcv_role_id }}"
    automation_hcv_secret_id : "{{ automation_hcv_secret_id }}"
    snow_hcv_url: "{{snow_hcv_url}}"
    vault_data: "{{ vault_data }}"
    session_id: "{{ session_id }}"
  tasks:
    - name: Roles for srs,hashicorpvault connection and adding srs ip to dynamichost
      include_role: 
        name: ngcs-srs-hashicorp-connect
      
- name: Provisioning VM and performing postprovisioning tasks on VM
  hosts: cpms_ara_loopback
  gather_facts: false
  no_log: "{{ tower_no_log_value }}"
  collections:
    - ngcs.common_collection
  vars:
        vcenter_fqdn: "{{ snow_vcenter_fqdn }}"                                                  
        vcenter_username: "{{ vault_data.data.vcenter_username }}"                                           
        vcenter_password: "{{ vault_data.data.vcenter_password }}"
        infoblox_username: "{{ vault_data.data.infoblox_username }}"                                        
        infoblox_password: "{{ vault_data.data.infoblox_password }}"                                        
        infoblox_version: "{{ vault_data.data.infoblox_version }}"
        windows_username: "{{ vault_data.data.windows_username }}"                        
        windows_password: "{{ vault_data.data.windows_password }}"                                          
        linux_username: "{{ vault_data.data.linux_username }}"                                              
        linux_password: "{{ vault_data.data.linux_password }}"                                              
        ad_username: "{{ vault_data.data.ad_username }}"                                                   
        ad_password: "{{ vault_data.data.ad_password }}"
        verify_certs: "{{ snow_verify_certs }}"
        ad_domain: "{{ snow_ad_domain }}"                                                                   
        subnet: "{{ snow_subnet }}"                                                                         
        vcenter_datacenter: "{{ snow_vcenter_datacenter }}"                                                 
        linux_interface: "{{ snow_linux_interface }}"                                                       
        windows_interface: "{{ snow_windows_interface }}"                                                    
        os_name: "{{ snow_os_name }}"                                                                       
        vm_tags: "{{ snow_vm_tag }}"                                                                        
        vm_name: "{{ snow_vm_name.split(',') }}"
        infoblox_url: "{{ snow_infoblox_url }}"                                                             
        vcenter_cluster: "{{ snow_vcenter_cluster }}"                                                       
        vcenter_datastore: "{{ snow_vcenter_datastore }}"         
        vcenter_ovf_template: "{{ snow_ovf_template }}"   
        vcenter_datacenter_folder: "vm/Discovered virtual machine"        
        vcenter_network: "{{ snow_vcenter_network }}"                                                       
        vm_disk_size: "{{ snow_vm_disk_size | int }}"                                                             
        vm_memory_size: "{{ snow_vm_memory_size | int }}"                       
        vm_cpu: "{{ snow_vm_cpu | int }}"
        vm_echo_shell: "{{ tower_vm_echo_shell }}"
        vm_shell_cwd: "{{ tower_vm_shell_cwd }}"
        ara_url: "{{ snow_ara_url }}"
        pf_url: "{{ snow_pf_url }}"
        vm_async_timeout: "{{ tower_vm_async_timeout }}"
        vm_poll_interval: "{{ tower_vm_poll_interval }}"
        vm_pvresize_shell: "{{ tower_vm_pvresize_shell }}"
        vm_rescan_iscsi_shell: "{{ tower_vm_rescan_iscsi_shell }}"
        vm_lvextend_shell: "{{ tower_vm_lvextend_shell }}"
        var_partition_number: "{{ tower_var_partition_number }}"
        vm_disk_number: "{{ tower_vm_disk_number | int }}"
        vm_log_path: "{{ tower_vm_log_path }}"
        volume_group_name: "{{ tower_volume_group_name  }}"
        logical_volume_name : "{{ tower_logical_volume_name  }}"
        var_device: "{{ tower_var_device }}"
        agent_file_linux: "{{ vault_data.data.agent_file_linux }}"
        agent_file_win: "{{ vault_data.data.agent_file_win }}"
        customer_id: "{{ vault_data.data.opsramp_customer_id }}"
        opsramp_proxyip: "{{ vault_data.data.opsramp_proxyip }}"
        opsramp_proxykey: "{{ vault_data.data.opsramp_proxykey }}"
        opsramp_proxyport: "{{ vault_data.data.opsramp_proxyport }}"
        opsramp_proxysecret: "{{ vault_data.data.opsramp_proxysecret }}"
        opsramp_url: "{{ vault_data.data.opsramp_url }}"
        opsramp_gateway_client_id: "{{ vault_data.data.opsramp_gateway_client_id }}"
        opsramp_gateway_client_secret: "{{ vault_data.data.opsramp_gateway_client_secret }}"
        opsramp_temp_src_location: "{{ vault_data.data.opsramp_temp_src_location }}"
        opsramp_temp_windows_dest_location: "{{ vault_data.data.opsramp_temp_windows_dest_location }}"
        opsramp_temp_linux_dest_location: "{{ vault_data.data.opsramp_temp_linux_dest_location }}"
        opsramp_version: "{{vault_data.data.opsramp_version}}"
        powershell_path:  "{{ tower_powershell_path }}"
        vm_setenforce_shell: "{{ tower_vm_setenforce_shell }}"                                    
        vm_nohup_shell: "{{ tower_vm_nohup_shell }}"
        opsramp_windows_agent_install_command: "{{ vault_data.data.opsramp_windows_agent_install_command }}"
        opsramp_manage_service_install: "{{ snow_opsramp_manage_service_install }}"
        pause_in_minutes: "{{ tower_pause_in_minutes }}"
  tasks:
    - name: Provisioning vm from role
      block:
        - name: provisioning and postprovisioning
          include_role:
            name: vmware_vm_provision
        - name: Install Opsramp agent
          import_role:
            name: opsramp_management
            tasks_from: opsramp_agt_install.yml
          when: opsramp_manage_service_install == "true"
        - name: SRS disconnect success 
          import_role:
            name: srs-disconnect-success
          delegate_to: localhost
          delegate_facts: True
      rescue:
        - name: Remove VM details from IPAM
          include_role:
            name: ipam_cleanup_postprovision
          ignore_errors: True
        - name: Remove VMs from datastore
          include_role:
            name: remove_vm_from_inventory_datastore
          ignore_errors: True
        - name: SRS disconnect failure
          import_role:
            name: srs-disconnect-fail
          delegate_to: localhost
          delegate_facts: True
